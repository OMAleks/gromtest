package Lesson_05;

import java.util.Arrays;

public class FirstArray {
    public static void main(String[] args) {

                //МАССИВ - это пронумерованная (проиндексированная) последовательноть данных

                //ВНИМАНИЕ!! Первое значение индекса массива = 0, а не 1!!! Всегда!!

        int a;  //declaration        - Это объявление переменной
        a = 10; //initialization     - Это присвоение значения переменной

        //_______________________________________________________________________________________________________
        //Первый способ создания массива (из двух этапов):

        //              1 Этап - Декларация массива:

        //  Сигнатура объявления (декларации) массива:
                         //  type_of_array [] name_of_array = new type_of_array [length_of_array];

        int [] firstArray = new int [3];    // Декаларация массива - на массив выделяют 3 ячейки памяти

                                            // Длина массива включает в себя элемент с индексом 0 . То-есть
                                            // в массиве длиной в 3 бдут следующие индексы: 0, 1. 2.

        //После декларации и до инициализации всем элементам массива присваивается значение ноль.
        //Если мы вручную увеличим длину массива при декларации, а затем потребуем вывести все
        //элементы массива, то после вывода инициализированных массивов будут выводится нули.

        //              2 Этап - Инициализация массива:

        //Сигнатура инициалиазации (присвоения значений) массива:
                                            //array_name [index] = get array element:

        firstArray [0] = 11;
        firstArray [1] = 200;
        firstArray [2] = -10;

        //ВНИМАНИЕ!! Первое значение индекса массива = 0, а не 1!!! Всегда!!

        System.out.println(firstArray [0]);
        System.out.println(firstArray [1]);         //Вывод одного элемента массива
        System.out.println(firstArray [2]);

        for (int i = 0; i <3; i++) {                //Вывод массива с помощью цикла
            System.out.println(firstArray [i]);
        }

        //Если возникнет желание поменять длину массива при декларации, то так же
        //придется менять условия цикла вывода массива. Поэтому более универсальный и практичный
        //код будет следующим:

        for (int i = 0; i < firstArray.length; i++){   //использование метода .length в условии цикла
            System.out.println(firstArray [i]);        //выводит значения всех элементов (переменных) массива


             /* Метод array.length возвращает число, равное количеству элементов массива. Это число всегда будет
             на единицу больше последнего индекса (номера) массива, так как нумерация массива начинается с нуля.  */



        }

        System.out.println(Arrays.toString(firstArray)); //Метод из внешней библиотеки Java.util
                                                         //!!Позволяет выводить ВСЕ!! элементы массива в виде строки
        //___________________________________________________________________________________________________________

        //Второй способ создание массива - это одновременно декларация и
        // инициализация в одной строке (аналогично переменной):

        int b = 10;                                 //Дкларация и инициализация переменной

        //Сигнатура делкарации и инициализации  массива в одну строку:
        //                          type_of_array [] name_of_array = {value_of_index 0, value_of_index 1, ...};

        int [] secondArray = {1, 10, 15, 20, -50};  // Декларация и инициализация массива
                                                    // В фигурных скобках указываются значения всех элементов массива

        System.out.println(Arrays.toString(secondArray));   //Вывод в строку всех элементов массива secondArray


        //Второй способ удобен толко в том случае, если заранее известны значения всех элементов массива

        //ВАЖНО!!! Длину массива нельзя поменять в процессе выполнения программы!!!
        //____________________________________________________________________________________________________________

        //                                         ЦИКЛ FOR-EACH

        //Позволяет пробежаться по всем элементам струткры данных (сд):

        for (int element : secondArray) {   //element - переменная, куда будет записываться каждое значение сд
            System.out.println(element);    //Выводит в консоль все элементы сд
        }                                   //цикл закончится тогда, когда каждове значение сд пройдет через тело цикла

        /* element - это переменная, в которую будет записываться значение каждого элемента массива (или другой
           структуры данных) до тех пор, пока цикл  не закончится.
         */


            //Тоже самое можно сделать с помощью обычного цикла FOR, но менее удобно:

        for (int i = 0; i < firstArray.length; i++) {
            int element = firstArray [i];
            System.out.println(element);
        }

        //___________________________________________________________________________________________________________

        //                          Массив - это структура данных

        //                          Структура данных - это упорядоченный набор данных
        // Основная фукция - упроащать роботу и управления большим объемом данных с помощью их структурирования

        // Основные свойтсва: 1) - определенный Тип (один тип данных на 1 сд);
        //                    2) - Правила структурирования;
        //                    3) Изменчивость или постоянство длины сд (во время выполнения программы).





        /*и
        !!!!!!!!!!!!!!!!!!!!!!!!!!!! Правила граммотного кодирования !!!!!!!!!!!!!!!!!!!!!!!!!!!
            1. Код не должен повторятся.
            2. Не должно быть кода, который не используется.
         */
    }
}
