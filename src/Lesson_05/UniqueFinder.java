package Lesson_05;

public class UniqueFinder {
    public static void main(String[] args) {

        //new comment for GitHub

        int [] userArray = {11};

        System.out.println("Количество уникальных чисел в массиве равно " + uniqueCount (userArray));
    }


/* Напишите метод uniqueCount, который будет находить количество уникальных чисел в массиве.
   Если число повторяется больше одного раза, его стоит учитывать, но только один раз. Длина массива > 0.

   Сигнатура метода - uniqueCount (int [] array).
   Метод должен содержаться в классе. Название класса не важно.

   Пример.
   Входящие данные
   {11, 12, 10, 5, 4, 44, 100, 44, 11, 10, 11}

   Ответ:
   7

   ОбЪяснение.
   Массив без повторений будет выглядить:
   4, 5, 10, 11, 12, 44, 100 - длина 7.

 */

    static int uniqueCount (int [] array) {

        /*
        В связи с тем, что я не умею создавать массивы во время программы, чтобы в каждом последующем массиве
        отсутствовали повторения значений каждого следующего элемента массива, то я остановлюсь на следюущем
        алгоритме решения:

        1.  Если длина массива меньше двух, то вернуть 1. В противном случае выполнить нижеизложенное.
        2.  Сравнить значения всех элементов массива со вторым элементом. Если  будет повторение, то присвоить
            такому элементу массива значение первого элемента.
        3.  Повторять пункт 2, сравнивая каждый следующий элемент массива.
        4.  Посчитать количество значений, не равных значению первого элемента.
        5.  Вернуть результат, равный подсчитанному количеству + 1 (плюс первый элемент).
         */


            int firstElement = array [0];
            int n = 1;

        for (int index1 = 0; index1 < array.length; index1++) {
            for (int index2 = n; index2 < array.length; index2++) {
                if (array[index1] == array[index2]) {
                    array[index2] = firstElement;
                }
            }
            n++;
        }
        int count = 0;

        for (int element : array) {
            if (element != firstElement ) {
                count++;
            }
        }

        int result = count + 1;

        return result;
    }

}
